<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - PWAForTest</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/menu.css"/>
    <link rel="stylesheet" href="~/PWAForTest.styles.css"/>
    <link rel="manifest" href="/manifest.json" />
</head>
<body>
    <header class="header" id="header">
        <div class="container">
            <nav class="navbar">
                <b id="opcionConexion"> <p class="text-success">Conectado a Internet</p> </b>
                <button type="button" class="burger" id="burger">
                    <span class="burger-line"></span>
                    <span class="burger-line"></span>
                    <span class="burger-line"></span>
                </button>
                <span class="overlay" id="overlay"></span>
                <div class="menu" id="menu">
                    <ul class="menu-block">
                        <li class="menu-item"><a class="menu-link" href="/">Persona</a></li>
                        <li class="menu-item"><a class="menu-link" href="/TipoLibro/Index">Tipo Libro</a></li>
                        <li class="menu-item"><a class="menu-link" href="/Libro/Index">Libro</a></li>
                        <li class="menu-item"><a class="menu-link" href="/Galeria/Index">Galeria</a></li>
                        <li class="menu-item"><a class="menu-link" href="/Contactos/Index">Contactos</a></li>
                        <li class="menu-item" id="menuInstalar"><a class="menu-link" onclick="Instalar()">Instalar</a></li>
                        <li class="menu-item"><a class="menu-link" >
                            <button onclick="Permiso()">Agregar Permisos</button></a></li>
                    </ul>
                </div>
            </nav>
        </div>
    </header>
    <div class="container" style="margin-top:5rem">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>
    <input type="hidden" id="hdfOculto" value="@Url.Content("~")" />


    <div id="divLoading" style="display:none;background-image:url(../img/loading.gif);position:absolute;top:0;left:0;
            width:100%;height:100%;
             background-repeat:no-repeat;background-position:center;z-index:2000">
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/menu.js"></script>
    <script src="~/js/sweetalert.js"></script>
    <script src="~/js/generic.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
    <script>

        var registroServiceWorker

        window.ononline=function(){
            document.getElementById("opcionConexion").innerHTML="<p class='text-success'>Conectado a Internet</p>"
        }

        window.onoffline=function(){
            document.getElementById("opcionConexion").innerHTML="<p class='text-danger'>Sin Conexion a la Red</p>"
        }

        bloqueoPantalla();

        if (navigator.serviceWorker)
        {
            console.log("Permite")
            navigator.serviceWorker.register("/service-worker.js")
            .then(res=>
                {
                    registroServiceWorker=res

                    navigator.serviceWorker.ready.then(reg => {

                        res.pushManager.getSubscription().then(subs=>{

                             if(subs==null)
                             {           
                                 
                                fetchGet("Notificacion/generarllavePublica", "text", function (key) {
                                registroServiceWorker.pushManager.subscribe({
                                    userVisibleOnly: true,
                                    applicationServerKey: key
                                })
                                .then(data => data.toJSON())
                                    .then(subscripcion => {
                                        console.log(subscripcion)
                                        var frm = new FormData()
                                        frm.append("endpoint", subscripcion.endpoint)
                                        frm.append("auth", subscripcion.keys.auth)
                                        frm.append("p256dh", subscripcion.keys.p256dh)
                                        fetchPost("Notificacion/guardarSubscripcion", "text", frm, function (rpta) {

                                            if (rpta == 1) {
                                                Exito("Se habilito las notificaciones")
                                            }
                                            else {
                                                Error("Ocurrio un error con las notificaciones")
                                            }

                                        })
                                    })
                            })


                             }


                        })

                    })
                    
                    console.log("Se registro el service worker")                
                })
                .catch(err=>
                    {
                        console.log(err)
                        console.log("No se registro el service worker")
                    })
        }
        else
        {
            console.log("NO permite")
        }

        document.getElementById("menuInstalar").style.display="none"
        if(getPWADisplayMode()=="browser"){
                    document.getElementById("menuInstalar").style.display="inline-block"
        }

        function Permiso(){
            DetectarInactividad(60,function(){
                document.location.href = "/Galeria/Index";
            })
        }

    </script>
</body>
</html>
